from cassandra.cluster import Cluster
from cassandra.auth import PlainTextAuthProvider
import json

def connect_to_db():
    """ Connect to the database and return the session object"""
    cloud_config = {
        'secure_connect_bundle': 'secure-connect-eduflow-ai-hack-2023.zip'
    }

    # This token JSON file is autogenerated when you download your token, 
    # if yours is different update the file name below
    with open("xavier@everdawn.ai-token.json") as f:
        secrets = json.load(f)

    CLIENT_ID = secrets["clientId"]
    CLIENT_SECRET = secrets["secret"]

    auth_provider = PlainTextAuthProvider(CLIENT_ID, CLIENT_SECRET)
    cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider)
    session = cluster.connect()

    row = session.execute("select release_version from system.local").one()

    if row:
        print(row[0])
    else:
        print("An error occurred.")

    # Choose the keyspace
    session.set_keyspace('aihack2023')

    return session



def create_tables(session):
    """ Creates all of the required tables in the database """
    # Students Table
    cql_command = """
    DROP TABLE IF EXISTS students;
    """

    session.execute(cql_command)
    print("Students table successfully dropped")

    cql_command = """
    CREATE TABLE students (
        email_address text PRIMARY KEY,
        school text,
        student_id_no text,
        first_name text,
        last_name text,
        phone_number text,
        interests list<text>,
        career_paths list<text>,
        subjects list<text>
        );
    """

    session.execute(cql_command)
    print("Students table successfully created")

    # Subjects Table
    cql_command = """
    DROP TABLE IF EXISTS subjects;
    """

    session.execute(cql_command)
    print("Subjects table successfully dropped")

    cql_command = """
    CREATE TABLE subjects (
        subject_code text PRIMARY KEY,
        subject_name text,
        skills map<text, text>
    );
    """

    session.execute(cql_command)
    print("Subjects table successfully created")

    # Student_Skills Table
    cql_command = """
    DROP TABLE IF EXISTS student_skills;
    """

    session.execute(cql_command)
    print("student_skills table successfully dropped")

    cql_command = """
    CREATE TABLE student_skills (
        student_email text,
        subject_code text,
        skill_title text,
        mastery_score float,
        retention_score float,
        need_to_revise boolean,
        PRIMARY KEY ((student_email, subject_code), skill_title)
    );
    """

    session.execute(cql_command)
    print("Student_skills table successfully created")


